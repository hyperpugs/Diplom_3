{"name": "Проверяем отображение созданного заказа в разделе В работе", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: Failed to decode response from marionette", "trace": "self = <test_order.TestOrderFeed object at 0x0000023307AFDCA0>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"97fbc48b-4c8d-49d0-a2e8-4940bbfcfeb5\")>\nregistration = {'accessToken': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3ODNiZTM1OWVkMjgwMDAxYjU0OTJiYSIsImlhdCI6MTczN....noRYREMvUnsguNZ2fUNxSenRcLdFh0yfmXl1rWDvjIk', 'email': '88643@gmail.com', 'name': 'wklczpxawk', 'password': '2024383'}\n\n    @allure.title(\"Проверяем отображение созданного заказа в разделе В работе\")\n    def test_created_order_in_work(self, driver, registration):\n        login_page = LoginPage(driver)\n        login_page.navigate(Urls.LOGIN_PAGE)\n        login_page.fill_in_email(registration['email'])\n        login_page.fill_in_password(registration['password'])\n        login_page.click_login_button()\n        main_page = MainPage(driver)\n        main_page.wait_order_button_visible()\n        expected_url = Urls.MAIN_PAGE\n        assert driver.current_url == expected_url\n        main_page.ingredient_drag_and_drop()\n        main_page.click_order_button()\n        popup = OrderCreatedPage(driver)\n        popup.incorrect_number_invisible()\n>       result = popup.get_just_created_orders_count()\n\ntests\\test_order.py:132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\order_created_popup_page.py:25: in get_just_created_orders_count\n    just_created = self.wait_for_element_visible(OrderCreatedLocators.JUST_CREATED_ORDER)\npages\\base_page.py:34: in wait_for_element_visible\n    return WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\nC:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\nC:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\nC:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023307BB5D60>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"Failed to decode response from marionette\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Failed to decode response from marionette\n\nC:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "steps": [{"name": "Инициализируем браузер", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.firefox.webdriver.WebDriver (session=\"97fbc48b-4c8d-49d0-a2e8-4940bbfcfeb5\")>"}], "start": 1736687412842, "stop": 1736687412842}, {"name": "Открываем нужный URL", "status": "passed", "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site/login'"}], "start": 1736687412842, "stop": 1736687413802}, {"name": "Заполняем поле Email", "status": "passed", "steps": [{"name": "Ждём, пока элемент станет кликабельным", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"(//div[contains(.,'Email')])[5]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687413802, "stop": 1736687413822}, {"name": "Клик по нужному элементу", "status": "passed", "steps": [{"name": "Ищем нужный элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"(//div[contains(.,'Email')])[5]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687413822, "stop": 1736687413822}], "parameters": [{"name": "locator", "value": "('xpath', \"(//div[contains(.,'Email')])[5]\")"}], "start": 1736687413822, "stop": 1736687414064}, {"name": "Заполняем поля", "status": "passed", "steps": [{"name": "Ищем нужный элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"(//input[@class='text input__textfield text_type_main-default'])[1]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687414064, "stop": 1736687414064}], "parameters": [{"name": "locator", "value": "('xpath', \"(//input[@class='text input__textfield text_type_main-default'])[1]\")"}, {"name": "text", "value": "'88643@gmail.com'"}], "start": 1736687414064, "stop": 1736687414082}], "parameters": [{"name": "text", "value": "'88643@gmail.com'"}], "start": 1736687413802, "stop": 1736687414082}, {"name": "Заполняем поле 'Пароль'", "status": "passed", "steps": [{"name": "Ждём, пока элемент станет кликабельным", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//label[contains(.,'Пароль')]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687414082, "stop": 1736687414092}, {"name": "Клик по нужному элементу", "status": "passed", "steps": [{"name": "Ищем нужный элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//label[contains(.,'Пароль')]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687414092, "stop": 1736687414096}], "parameters": [{"name": "locator", "value": "('xpath', \"//label[contains(.,'Пароль')]\")"}], "start": 1736687414092, "stop": 1736687414317}, {"name": "Заполняем поля", "status": "passed", "steps": [{"name": "Ищем нужный элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//input[contains(@name,'Пароль')]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687414317, "stop": 1736687414317}], "parameters": [{"name": "locator", "value": "('xpath', \"//input[contains(@name,'Пароль')]\")"}, {"name": "text", "value": "'2024383'"}], "start": 1736687414317, "stop": 1736687414322}], "parameters": [{"name": "text", "value": "'2024383'"}], "start": 1736687414082, "stop": 1736687414322}, {"name": "Нажимаем на кнопку 'Войти'", "status": "passed", "steps": [{"name": "Клик по нужному элементу", "status": "passed", "steps": [{"name": "Ищем нужный элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[contains(.,'Войти')]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687414322, "stop": 1736687414322}], "parameters": [{"name": "locator", "value": "('xpath', \"//button[contains(.,'Войти')]\")"}], "start": 1736687414322, "stop": 1736687414542}], "start": 1736687414322, "stop": 1736687414542}, {"name": "Инициализируем браузер", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.firefox.webdriver.WebDriver (session=\"97fbc48b-4c8d-49d0-a2e8-4940bbfcfeb5\")>"}], "start": 1736687414542, "stop": 1736687414542}, {"name": "Ожидаем видимости кнопки 'Оформить заказ'", "status": "passed", "steps": [{"name": "Ждём, пока элемент станет видимым", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[contains(.,'Оформить заказ')]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687414542, "stop": 1736687414552}], "start": 1736687414542, "stop": 1736687414552}, {"name": "Перетаскиваем ингредиент в список ингредиентов", "status": "passed", "steps": [{"name": "Ждём, пока элемент станет кликабельным", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//a[1]/p[text()='Флюоресцентная булка R2-D3']\")"}, {"name": "timeout", "value": "60"}], "start": 1736687414554, "stop": 1736687414563}, {"name": "Ждём, пока элемент станет видимым", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//div[@class='constructor-element constructor-element_pos_top']\")"}, {"name": "timeout", "value": "60"}], "start": 1736687414564, "stop": 1736687414570}, {"name": "Перетаскиваем элемент", "status": "passed", "parameters": [{"name": "source_element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"97fbc48b-4c8d-49d0-a2e8-4940bbfcfeb5\", element=\"f6f27874-5571-415e-9338-c80743370f7e\")>"}, {"name": "target_element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"97fbc48b-4c8d-49d0-a2e8-4940bbfcfeb5\", element=\"e8d91344-209c-468b-ae84-b0bc203abca5\")>"}], "start": 1736687414573, "stop": 1736687415131}], "start": 1736687414554, "stop": 1736687415131}, {"name": "Нажимаем на кнопку 'Оформить заказ'", "status": "passed", "steps": [{"name": "Клик по нужному элементу", "status": "passed", "steps": [{"name": "Ищем нужный элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[contains(.,'Оформить заказ')]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687415131, "stop": 1736687415132}], "parameters": [{"name": "locator", "value": "('xpath', \"//button[contains(.,'Оформить заказ')]\")"}], "start": 1736687415131, "stop": 1736687415346}], "start": 1736687415131, "stop": 1736687415346}, {"name": "Инициализируем браузер", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.firefox.webdriver.WebDriver (session=\"97fbc48b-4c8d-49d0-a2e8-4940bbfcfeb5\")>"}], "start": 1736687415346, "stop": 1736687415346}, {"name": "Убеждаемся, что отображается правильный номер заказа, а не 9999", "status": "passed", "steps": [{"name": "Ждём, пока элемент перестанет быть видимым", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//h2[contains(.,'9999')]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687415346, "stop": 1736687428532}], "start": 1736687415346, "stop": 1736687428532}, {"name": "Получаем номер созданного заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: Failed to decode response from marionette\n\n", "trace": "  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\PycharmProjects\\Diplom_3\\pages\\order_created_popup_page.py\", line 25, in get_just_created_orders_count\n    just_created = self.wait_for_element_visible(OrderCreatedLocators.JUST_CREATED_ORDER)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 34, in wait_for_element_visible\n    return WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 766, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Ждём, пока элемент станет видимым", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: Failed to decode response from marionette\n\n", "trace": "  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 34, in wait_for_element_visible\n    return WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 766, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Sasha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "('xpath', \"//h2[contains(@class,'digits-large mb-8')]\")"}, {"name": "timeout", "value": "60"}], "start": 1736687428532, "stop": 1736687446286}], "start": 1736687428532, "stop": 1736687446286}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1736687412842, "stop": 1736687446289, "uuid": "7344de22-b204-4621-a6f2-213ddbb7b3bb", "historyId": "51883871158b5cbdd0e9952f8d368012", "testCaseId": "6d5008da294bea8b29f01c75fc8cf00d", "fullName": "tests.test_order.TestOrderFeed#test_created_order_in_work", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "DESKTOP-5C5JKNS"}, {"name": "thread", "value": "16456-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}